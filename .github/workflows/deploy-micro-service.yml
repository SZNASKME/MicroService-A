name: build-orders-and-notify-uc

on:
  push:
    branches: [main]
    paths: [services/orders/**]
  workflow_dispatch:
    inputs:
      service: { default: orders }
      target_env: { type: choice, options: [staging, production], default: staging }

env:
  SERVICE: orders
  IMAGE_REPO: ghcr.io/${{ toLower(github.repository) }}/orders

permissions:
  contents: read
  packages: write
  deployments: write

jobs:
  build-and-send:
    runs-on: ubuntu-latest
    environment: staging

    # ✅ ย้ายมาวางที่ระดับ job
    concurrency:
      group: ${{ inputs.target_env }}-${{ inputs.service }}
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: services/orders
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:${{ github.sha }}
            ${{ env.IMAGE_REPO }}:latest

      - name: Create GitHub Deployment
        id: gh_deploy
        uses: actions/github-script@v7
        with:
          script: |
            const res = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              auto_merge: false,
              required_contexts: [],
              description: `Deploy ${process.env.SERVICE} via Stonebranch`,
              production_environment: true
            });
            core.setOutput('id', res.data.id);

      - name: Notify Stonebranch UC to deploy
        env:
          UC_URL:   ${{ secrets.UC_URL }}
          UC_TOKEN: ${{ secrets.UC_TOKEN }}
        run: |
          set -euo pipefail
          IMAGE="${IMAGE_REPO}:${GITHUB_SHA}"
          DEPLOY_ID="${{ steps.gh_deploy.outputs.id }}"
          PAYLOAD=$(printf '{"image":"%s","github_deployment_id":"%s"}' "$IMAGE" "$DEPLOY_ID")
          curl -sS -X POST \
            "$UC_URL/uc/resources/universalevent/push?access_token=$UC_TOKEN&type=deploy_request&service=${SERVICE}&env=prod&sha=${GITHUB_SHA}" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD"
